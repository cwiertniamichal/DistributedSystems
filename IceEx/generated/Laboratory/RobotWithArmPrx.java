// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `Laboratory.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Laboratory;

public interface RobotWithArmPrx extends RobotPrx
{
    public void releaseArm(int distance)
        throws ArmLengthOutOfRangeException,
               BadRobotStateException;

    public void releaseArm(int distance, java.util.Map<String, String> __ctx)
        throws ArmLengthOutOfRangeException,
               BadRobotStateException;

    public Ice.AsyncResult begin_releaseArm(int distance);

    public Ice.AsyncResult begin_releaseArm(int distance, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_releaseArm(int distance, Ice.Callback __cb);

    public Ice.AsyncResult begin_releaseArm(int distance, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_releaseArm(int distance, Callback_RobotWithArm_releaseArm __cb);

    public Ice.AsyncResult begin_releaseArm(int distance, java.util.Map<String, String> __ctx, Callback_RobotWithArm_releaseArm __cb);

    public Ice.AsyncResult begin_releaseArm(int distance, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_releaseArm(int distance, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_releaseArm(int distance, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_releaseArm(int distance, 
                                            java.util.Map<String, String> __ctx, 
                                            IceInternal.Functional_VoidCallback __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public void end_releaseArm(Ice.AsyncResult __result)
        throws ArmLengthOutOfRangeException,
               BadRobotStateException;

    public void pocketArm()
        throws BadArmStateException,
               BadRobotStateException;

    public void pocketArm(java.util.Map<String, String> __ctx)
        throws BadArmStateException,
               BadRobotStateException;

    public Ice.AsyncResult begin_pocketArm();

    public Ice.AsyncResult begin_pocketArm(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pocketArm(Ice.Callback __cb);

    public Ice.AsyncResult begin_pocketArm(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pocketArm(Callback_RobotWithArm_pocketArm __cb);

    public Ice.AsyncResult begin_pocketArm(java.util.Map<String, String> __ctx, Callback_RobotWithArm_pocketArm __cb);

    public Ice.AsyncResult begin_pocketArm(IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pocketArm(IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_pocketArm(java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pocketArm(java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public void end_pocketArm(Ice.AsyncResult __result)
        throws BadArmStateException,
               BadRobotStateException;

    public void grabItem(int power)
        throws BadArmStateException,
               BadRobotStateException;

    public void grabItem(int power, java.util.Map<String, String> __ctx)
        throws BadArmStateException,
               BadRobotStateException;

    public Ice.AsyncResult begin_grabItem(int power);

    public Ice.AsyncResult begin_grabItem(int power, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_grabItem(int power, Ice.Callback __cb);

    public Ice.AsyncResult begin_grabItem(int power, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_grabItem(int power, Callback_RobotWithArm_grabItem __cb);

    public Ice.AsyncResult begin_grabItem(int power, java.util.Map<String, String> __ctx, Callback_RobotWithArm_grabItem __cb);

    public Ice.AsyncResult begin_grabItem(int power, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_grabItem(int power, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_grabItem(int power, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_grabItem(int power, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public void end_grabItem(Ice.AsyncResult __result)
        throws BadArmStateException,
               BadRobotStateException;

    public void dropItem()
        throws BadArmStateException,
               BadRobotStateException;

    public void dropItem(java.util.Map<String, String> __ctx)
        throws BadArmStateException,
               BadRobotStateException;

    public Ice.AsyncResult begin_dropItem();

    public Ice.AsyncResult begin_dropItem(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_dropItem(Ice.Callback __cb);

    public Ice.AsyncResult begin_dropItem(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_dropItem(Callback_RobotWithArm_dropItem __cb);

    public Ice.AsyncResult begin_dropItem(java.util.Map<String, String> __ctx, Callback_RobotWithArm_dropItem __cb);

    public Ice.AsyncResult begin_dropItem(IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_dropItem(IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_dropItem(java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_dropItem(java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public void end_dropItem(Ice.AsyncResult __result)
        throws BadArmStateException,
               BadRobotStateException;
}
